import 'package:flame/components.dart';
import 'package:flame/game.dart';
import 'package:flame/input.dart';
import 'package:flutter/material.dart';
import 'dart:math';

void main() {
  runApp(GameWidget(game: SpaceShooterGame()));
}

class SpaceShooterGame extends FlameGame with PanDetector {
  late Player player;
  late Enemy enemy;

  @override
  Future<void> onLoad() async {
    await super.onLoad();

    player = Player();
    enemy = Enemy();

    add(player);
    add(enemy);
  }

  @override
  void onPanUpdate(DragUpdateInfo info) {
    player.move(info.delta.game);
  }

  void removeEnemy() {
    remove(enemy);
  }
}

class Player extends SpriteComponent with HasGameRef<SpaceShooterGame> {
  @override
  Future<void> onLoad() async {
    await super.onLoad();

    sprite = await gameRef.loadSprite('player.png');

    position = gameRef.size / 2;
    width = 100;
    height = 150;
    anchor = Anchor.center;
  }

  void move(Vector2 delta) {
    position.add(delta);
  }
}

class Enemy extends SpriteComponent with HasGameRef<SpaceShooterGame> {
  double speed = 100;

  @override
  Future<void> onLoad() async {
    await super.onLoad();

    sprite = await gameRef.loadSprite('enemy.png');

    position = Vector2(
      gameRef.size.x / 2,
      0,
    );
    width = 100;
    height = 100;
    anchor = Anchor.center;
  }

  @override
  void update(double dt) {
    super.update(dt);

    position.add(Vector2(0, speed * dt));

    if (position.y > gameRef.size.y) {
      gameRef.removeEnemy();
    }
  }
}

